[{"/Users/omarkarame/Desktop/Portfolio/src/index.js":"1","/Users/omarkarame/Desktop/Portfolio/src/reportWebVitals.js":"2","/Users/omarkarame/Desktop/Portfolio/src/App.jsx":"3","/Users/omarkarame/Desktop/Portfolio/src/pages/Home/Home.jsx":"4","/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeIntro/AboutMeIntro.jsx":"5","/Users/omarkarame/Desktop/Portfolio/src/components/Nav/Nav.jsx":"6","/Users/omarkarame/Desktop/Portfolio/src/pages/Contact/Contact.jsx":"7","/Users/omarkarame/Desktop/Portfolio/src/components/BackgroundRectangle/BackgroundRectangle.jsx":"8","/Users/omarkarame/Desktop/Portfolio/src/components/SmallCircle/SmallCircle.jsx":"9","/Users/omarkarame/Desktop/Portfolio/src/components/Header/Header.jsx":"10","/Users/omarkarame/Desktop/Portfolio/src/components/WhiteButton/WhiteButton.jsx":"11","/Users/omarkarame/Desktop/Portfolio/src/components/FreeTypeInput/FreeTypeInput.jsx":"12","/Users/omarkarame/Desktop/Portfolio/src/components/ShortInput/ShortInput.jsx":"13","/Users/omarkarame/Desktop/Portfolio/src/components/OrangeButton/OrangeButton.jsx":"14","/Users/omarkarame/Desktop/Portfolio/src/components/LargeSemiCircle/LargeSemiCircle.jsx":"15","/Users/omarkarame/Desktop/Portfolio/src/components/AboutMeLayout/AboutMeLayout.jsx":"16","/Users/omarkarame/Desktop/Portfolio/src/components/AboutMeNav/AboutMeNav.jsx":"17","/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeSkills/AboutMeSkills.jsx":"18","/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeProjects/AboutMeProjects.jsx":"19","/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeInterests/AboutMeInterests.jsx":"20","/Users/omarkarame/Desktop/Portfolio/src/components/IntroSection/IntroSection.jsx":"21","/Users/omarkarame/Desktop/Portfolio/src/components/InterestsSection/InterestsSection.jsx":"22","/Users/omarkarame/Desktop/Portfolio/src/components/ProjectsSection/ProjectsSection.jsx":"23"},{"size":535,"mtime":1669046343625,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1669046343626,"results":"26","hashOfConfig":"25"},{"size":1019,"mtime":1674828101678,"results":"27","hashOfConfig":"25"},{"size":753,"mtime":1670616197574,"results":"28","hashOfConfig":"25"},{"size":836,"mtime":1674817980225,"results":"29","hashOfConfig":"25"},{"size":1936,"mtime":1674154781703,"results":"30","hashOfConfig":"25"},{"size":1950,"mtime":1674826549770,"results":"31","hashOfConfig":"25"},{"size":2029,"mtime":1674237166610,"results":"32","hashOfConfig":"25"},{"size":1367,"mtime":1670864956067,"results":"33","hashOfConfig":"25"},{"size":249,"mtime":1670616181339,"results":"34","hashOfConfig":"25"},{"size":285,"mtime":1670857012782,"results":"35","hashOfConfig":"25"},{"size":384,"mtime":1674825056967,"results":"36","hashOfConfig":"25"},{"size":304,"mtime":1674825035840,"results":"37","hashOfConfig":"25"},{"size":341,"mtime":1674823391956,"results":"38","hashOfConfig":"25"},{"size":652,"mtime":1675359547301,"results":"39","hashOfConfig":"25"},{"size":617,"mtime":1674236372501,"results":"40","hashOfConfig":"25"},{"size":2276,"mtime":1671038122584,"results":"41","hashOfConfig":"25"},{"size":502,"mtime":1674822466397,"results":"42","hashOfConfig":"25"},{"size":801,"mtime":1674821288651,"results":"43","hashOfConfig":"25"},{"size":600,"mtime":1674822399006,"results":"44","hashOfConfig":"25"},{"size":2068,"mtime":1674237168186,"results":"45","hashOfConfig":"25"},{"size":6727,"mtime":1674224412487,"results":"46","hashOfConfig":"25"},{"size":6738,"mtime":1674817929218,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"177xadn",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},"/Users/omarkarame/Desktop/Portfolio/src/index.js",[],[],[],"/Users/omarkarame/Desktop/Portfolio/src/reportWebVitals.js",[],[],"/Users/omarkarame/Desktop/Portfolio/src/App.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/pages/Home/Home.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeIntro/AboutMeIntro.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/Nav/Nav.jsx",["122"],[],"import './Nav.scss';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst Nav = () => {\n    const [navClassName, setNavClassName] = useState('nav');\n    const [contactClassName, setContactClassName] = useState('link');\n    const [homeClassName, setHomeClassName] = useState('link-selected');\n    const [aboutMeClassName, setAboutMeClassName] = useState('link');\n    const location = useLocation();\n    const changeNavBar = () => {\n        if (location.pathname === '/') {\n            setNavClassName('nav');\n            setHomeClassName('link-selected');\n            setContactClassName('link');\n            setAboutMeClassName('link');\n        }\n        else if (location.pathname === '/contact') {\n            setNavClassName('nav');\n            setHomeClassName('link');\n            setContactClassName('link-selected');\n            setAboutMeClassName('link');\n        }\n        else if (location.pathname === '/aboutmeintro' || location.pathname === '/aboutmeinterests' || location.pathname === '/aboutmeprojects' || location.pathname === '/aboutmeskills') {\n            setNavClassName('nav-dark');\n            setHomeClassName('link-dark');\n            setContactClassName('link-dark');\n            setAboutMeClassName('link-selected');\n        }\n    }\n\n    useEffect( () => {\n        changeNavBar()\n    }, [location.pathname])\n\n  return (\n    <div className={navClassName}>\n        <div className='nav__links'>\n            <Link className={contactClassName} to='/contact' onSelect={changeNavBar}>\n                <h6>Contact Me</h6>\n            </Link>\n            <Link className={homeClassName} to='/' onSelect={changeNavBar}>\n                <h6>Home</h6>\n            </Link>\n            <Link className={aboutMeClassName} to='/aboutmeintro' onSelect={changeNavBar}>\n                <h6>About Me</h6>\n            </Link>\n        </div>\n    </div>\n  )\n}\n\nexport default Nav","/Users/omarkarame/Desktop/Portfolio/src/pages/Contact/Contact.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/BackgroundRectangle/BackgroundRectangle.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/SmallCircle/SmallCircle.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/Header/Header.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/WhiteButton/WhiteButton.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/FreeTypeInput/FreeTypeInput.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/ShortInput/ShortInput.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/OrangeButton/OrangeButton.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/LargeSemiCircle/LargeSemiCircle.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/AboutMeLayout/AboutMeLayout.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/AboutMeNav/AboutMeNav.jsx",["123"],[],"import './AboutMeNav.scss';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst AboutMeNav = () => {\n    const [introClassName, setIntroClassName] = useState('intro-selected');\n    const [skillsClassName, setSkillsClassName] = useState('skills');\n    const [projectsClassName, setProjectsClassName] = useState('projects');\n    const [interestsClassName, setInterestsClassName] = useState('interests');\n    const location = useLocation();\n\n    const changeAboutMeNav = () => {\n        if (location.pathname === '/aboutmeintro') {\n            setIntroClassName('intro-selected');\n            setSkillsClassName('skills');\n            setProjectsClassName('projects');\n            setInterestsClassName('interests');\n        }\n        else if (location.pathname === '/aboutmeskills') {\n            setIntroClassName('intro');\n            setSkillsClassName('skills-selected');\n            setProjectsClassName('projects');\n            setInterestsClassName('interests');\n        }\n        else if (location.pathname === '/aboutmeprojects') {\n            setIntroClassName('intro');\n            setSkillsClassName('skills');\n            setProjectsClassName('projects-selected');\n            setInterestsClassName('interests');\n        }\n        else if (location.pathname === '/aboutmeinterests') {\n            setIntroClassName('intro');\n            setSkillsClassName('skills');\n            setProjectsClassName('projects');\n            setInterestsClassName('interests-selected');\n        }\n    }\n\n    useEffect( () => {\n        changeAboutMeNav()\n    }, [location.pathname])\n\n  return (\n    <div className='about-me-nav'>\n        <Link to={\"/aboutmeintro\"}>\n            <h6 className={introClassName} onClick={changeAboutMeNav}>Intro</h6>\n        </Link>\n        <Link to={\"/aboutmeskills\"}>\n            <h6 className={skillsClassName} onClick={changeAboutMeNav}>Skills</h6>\n        </Link>\n        <Link to={\"/aboutmeprojects\"}>\n            <h6 className={projectsClassName} onClick={changeAboutMeNav}>Projects</h6>\n        </Link>\n        <Link to={\"/aboutmeinterests\"}>\n            <h6 className={interestsClassName} onClick={changeAboutMeNav}>Interests</h6>\n        </Link>\n    </div>\n  )\n}\n\nexport default AboutMeNav","/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeSkills/AboutMeSkills.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeProjects/AboutMeProjects.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/pages/AboutMeInterests/AboutMeInterests.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/IntroSection/IntroSection.jsx",[],[],"/Users/omarkarame/Desktop/Portfolio/src/components/InterestsSection/InterestsSection.jsx",["124","125","126","127","128","129","130","131","132","133","134","135"],[],"import './InterestsSection.scss';\nimport { useState } from 'react';\nimport Art from '../../styles/images/art.gif';\nimport Sports from '../../styles/images/football.gif';\nimport Space from '../../styles/images/saturn.gif';\nimport Podcasts from '../../styles/images/podcasts.gif';\nimport Origami from '../../styles/images/origami.gif';\nimport Gaming from '../../styles/images/gaming.gif';\nimport Hand from '../../styles/images/hand.png';\nimport Arrowhead from '../../styles/images/arrowhead.PNG';\n\n\nconst InterestsSection = () => {\n    const interestsHeaders = ['Art', 'Sports', 'Space', 'Podcasts', 'Origami', 'Gaming']\n    const interestsHeadersLeft = ['Art left-gif', 'Sports left-gif', 'Space left-gif', 'Podcasts left-gif', 'Origami left-gif', 'Gaming left-gif']\n    const interestsHeadersRight = ['Art right-gif', 'Sports right-gif', 'Space right-gif', 'Podcasts right-gif', 'Origami right-gif', 'Gaming right-gif']\n    const interestsGifs = [Art, Sports, Space, Podcasts, Origami, Gaming]\n    const [interestsHeader, setInterestsHeader] = useState(interestsHeaders[0])\n    const [interestsGif, setInterestsGif] = useState(interestsGifs[0])\n    const [leftGif, setLeftGif] = useState(interestsGifs[0])\n    const [rightGif, setRightGif] = useState(interestsGifs[1])\n    const [leftArrowheadClassName, setLeftArrowheadClassName] = useState('left-arrowhead-faded')\n    const [rightArrowheadClassName, setRightArrowheadClassName] = useState('right-arrowhead')\n    const [gifClassName, setGifClassName] = useState(interestsHeaders[0])\n    const [leftGifClassName, setLeftGifClassName] = useState('Art left-gif-start')\n    const [rightGifClassName, setRightGifClassName] = useState(interestsHeadersRight[1])\n\n    const swipeLeft = () => {\n        if (interestsHeader == 'Art'){\n            setInterestsHeader(interestsHeaders[1])\n            setInterestsGif(interestsGifs[1])\n            setRightGif(interestsGifs[2])\n            setLeftArrowheadClassName('left-arrowhead')\n            setGifClassName(interestsHeaders[1])\n            setLeftGifClassName(interestsHeadersLeft[0])\n            setRightGifClassName(interestsHeadersRight[2])\n        }\n        else if (interestsHeader == 'Sports'){\n            setInterestsHeader(interestsHeaders[2])\n            setInterestsGif(interestsGifs[2])\n            setLeftGif(interestsGifs[1])\n            setRightGif(interestsGifs[3])\n            setGifClassName(interestsHeaders[2])\n            setLeftGifClassName(interestsHeadersLeft[1])\n            setRightGifClassName(interestsHeadersRight[3])\n        }\n        else if (interestsHeader == 'Space'){\n            setInterestsHeader(interestsHeaders[3])\n            setInterestsGif(interestsGifs[3])\n            setLeftGif(interestsGifs[2])\n            setRightGif(interestsGifs[4])\n            setGifClassName(interestsHeaders[3])\n            setLeftGifClassName(interestsHeadersLeft[2])\n            setRightGifClassName(interestsHeadersRight[4])\n        }\n        else if (interestsHeader == 'Podcasts'){\n            setInterestsHeader(interestsHeaders[4])\n            setInterestsGif(interestsGifs[4])\n            setLeftGif(interestsGifs[3])\n            setRightGif(interestsGifs[5])\n            setGifClassName(interestsHeaders[4])\n            setLeftGifClassName(interestsHeadersLeft[3])\n            setRightGifClassName(interestsHeadersRight[5])\n        }\n        else if (interestsHeader == 'Origami'){\n            setInterestsHeader(interestsHeaders[5])\n            setInterestsGif(interestsGifs[5])\n            setLeftGif(interestsGifs[4])\n            setGifClassName(interestsHeaders[5])\n            setRightArrowheadClassName('right-arrowhead-faded')\n            setLeftGifClassName(interestsHeadersLeft[4])\n            setRightGifClassName('Gaming right-gif-end')\n        }\n    }\n\n    const swipeRight = () => {\n        if (interestsHeader == 'Gaming'){\n            setInterestsHeader(interestsHeaders[4])\n            setInterestsGif(interestsGifs[4])\n            setLeftGif(interestsGifs[3])\n            setRightGif(interestsGifs[5])\n            setRightArrowheadClassName('right-arrowhead')\n            setGifClassName(interestsHeaders[4])\n            setLeftGifClassName(interestsHeadersLeft[3])\n            setRightGifClassName(interestsHeadersRight[5])\n        }\n        else if (interestsHeader == 'Origami'){\n            setInterestsHeader(interestsHeaders[3])\n            setInterestsGif(interestsGifs[3])\n            setLeftGif(interestsGifs[2])\n            setRightGif(interestsGifs[4])\n            setGifClassName(interestsHeaders[3])\n            setLeftGifClassName(interestsHeadersLeft[2])\n            setRightGifClassName(interestsHeadersRight[4])\n        }\n        else if (interestsHeader == 'Podcasts'){\n            setInterestsHeader(interestsHeaders[2])\n            setInterestsGif(interestsGifs[2])\n            setLeftGif(interestsGifs[1])\n            setRightGif(interestsGifs[3])\n            setGifClassName(interestsHeaders[2])\n            setLeftGifClassName(interestsHeadersLeft[1])\n            setRightGifClassName(interestsHeadersRight[3])\n        }\n        else if (interestsHeader == 'Space'){\n            setInterestsHeader(interestsHeaders[1])\n            setInterestsGif(interestsGifs[1])\n            setLeftGif(interestsGifs[0])\n            setRightGif(interestsGifs[2])\n            setGifClassName(interestsHeaders[1])\n            setLeftGifClassName(interestsHeadersLeft[0])\n            setRightGifClassName(interestsHeadersRight[2])\n        }\n        else if (interestsHeader == 'Sports'){\n            setInterestsHeader(interestsHeaders[0])\n            setInterestsGif(interestsGifs[0])\n            setRightGif(interestsGifs[1])\n            setGifClassName(interestsHeaders[0])\n            setLeftArrowheadClassName('left-arrowhead-faded')\n            setLeftGifClassName('Art left-gif-start')\n            setRightGifClassName(interestsHeadersRight[1])\n        }\n    }\n\n  return (\n    <div className='interests-section'>\n        <h2 className=\"interests-section__header\">{interestsHeader}</h2>\n        <div className=\"interests-section__gifs-carousel\">\n            <img src={Arrowhead} alt=\"left arrowhead\" className={leftArrowheadClassName} onClick={swipeRight}/>\n            <img src={leftGif} alt=\"invisible image\" className={leftGifClassName}/>\n            <img src={interestsGif} alt={interestsHeader} className={gifClassName}/>\n            <img src={rightGif} alt=\"invisible image\" className={rightGifClassName}/>\n            <img src={Arrowhead} alt=\"right arrowhead\" className={rightArrowheadClassName} onClick={swipeLeft}/>\n        </div>\n        <img src={Hand} alt=\"hand reaching out\" className=\"interests-section__hand\"/>\n    </div>\n  )\n}\n\nexport default InterestsSection","/Users/omarkarame/Desktop/Portfolio/src/components/ProjectsSection/ProjectsSection.jsx",["136","137","138","139","140"],[],"import './ProjectsSection.scss'\nimport WhiteButton from '../WhiteButton/WhiteButton.jsx'\nimport OrangeButton from '../OrangeButton/OrangeButton.jsx'\nimport Cryptocurrency from '../../styles/images/cryptocurrency.gif'\nimport Weather from '../../styles/images/weather.gif'\nimport Calculator from '../../styles/images/calculator.gif'\nimport ArtGallery from '../../styles/images/art-gallery-proj.gif'\nimport FlatFinder from '../../styles/images/flat-finder.gif'\nimport CryptocurrencyImage from '../../styles/images/cryptocurrency.jpg'\nimport WeatherImage from '../../styles/images/weather.jpg'\nimport CalculatorImage from '../../styles/images/calculator.jpg'\nimport ArtGalleryImage from '../../styles/images/art-gallery-proj.jpg'\nimport FlatFinderImage from '../../styles/images/flat-finder.jpg'\n\nconst ProjectsSection = ({handleScroll}) => {\n  return (\n    <div className='projects-section' onScroll={handleScroll}>\n        <div className='projects-components'>\n            <div className='image-content-cryptocurrency'>\n                <div className='image-section'>\n                    <img src={CryptocurrencyImage} alt=\"Cryptocurrency image\" className='cryptocurrency-image'/>\n                    <img src={Cryptocurrency} alt=\"Cryptocurrency gif\" className='cryptocurrency-gif'/>\n                </div>\n            </div>\n            <div className='project-content-cryptocurrency'>\n                <div className='content-section'>\n                    <div className='section-one'>\n                        <h2 className='numbers-right'>1.</h2>\n                    </div>\n                    <div className='section-two'>\n                        <h4 className='project-title'>Cryptocurrency Price Update (Web App)</h4>\n                        <div className='section-two-buttons'>\n                            <WhiteButton \n                                buttonText={\"Code\"}\n                            />\n                            <OrangeButton \n                                buttonText={\"Download\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='image-content-weather'>\n                <div className='image-section'>\n                    <img src={WeatherImage} alt=\"weather image\" className='weather-image'/>\n                    <img src={Weather} alt=\"weather gif\" className='weather-gif'/>\n                </div>\n            </div>\n            <div className='project-content-weather'>\n                <div className='content-section'>\n                    <div className='section-one'>\n                        <h2 className='numbers-left'>2.</h2>\n                    </div>\n                    <div className='section-two'>\n                        <h4 className='project-title'>Live Weather Forecast (Web App)</h4>\n                        <div className='section-two-buttons'>\n                            <WhiteButton \n                                buttonText={\"Code\"}\n                            />\n                            <OrangeButton \n                                buttonText={\"Website\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='image-content-calculator'>\n                <div className='image-section'>\n                    <img src={CalculatorImage} alt=\"calculator image\" className='calculator-image' />\n                    <img src={Calculator} alt=\"calculator gif\" className='calculator-gif'/>\n                </div>\n            </div>\n            <div className='project-content-calculator'>\n                <div className='content-section'>\n                    <div className='section-one'>\n                        <h2 className='numbers-right'>3.</h2>\n                    </div>\n                    <div className='section-two'>\n                        <h4 className='project-title'>Calculator (Locally Hosted)</h4>\n                        <div className='section-two-buttons'>\n                            <WhiteButton \n                                buttonText={\"Code\"}\n                            />\n                            <OrangeButton \n                                buttonText={\"Download\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='image-content-art-gallery'>\n                <div className='image-section'>\n                    <img src={ArtGalleryImage} alt=\"art gallery image\" className='art-gallery-image'/>\n                    <img src={ArtGallery} alt=\"art gallery gif\" className='art-gallery-gif'/>\n                </div> \n            </div>\n            <div className='project-content-art-gallery'>\n                <div className='content-section'>\n                    <div className='section-one'>\n                        <h2 className='numbers-left'>4.</h2>\n                    </div>\n                    <div className='section-two'>\n                        <h4 className='project-title'>Art Gallery (Full-stack)</h4>\n                        <div className='section-two-buttons'>\n                            <WhiteButton \n                                buttonText={\"Code\"}\n                            />\n                            <OrangeButton \n                                buttonText={\"Download\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className='image-content-flat-finder'>\n                <div className='image-section'>\n                    <img src={FlatFinderImage} alt=\"flat finder image\" className='flat-finder-image'/>\n                    <img src={FlatFinder} alt=\"flat finder gif\" className='flat-finder-gif'/>\n                </div>\n            </div>\n            <div className='project-content-flat-finder'>\n                <div className='content-section'>\n                    <div className='section-one'>\n                        <h2 className='numbers-left'>5.</h2>\n                    </div>\n                    <div className='section-two'>\n                        <h4 className='project-title'>Flat Finder (Web App)</h4>\n                        <div className='section-two-buttons'>\n                            <WhiteButton \n                                buttonText={\"Code\"}\n                            />\n                            <OrangeButton \n                                buttonText={\"Website\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default ProjectsSection",{"ruleId":"141","severity":1,"message":"142","line":34,"column":8,"nodeType":"143","endLine":34,"endColumn":27,"suggestions":"144"},{"ruleId":"141","severity":1,"message":"145","line":41,"column":8,"nodeType":"143","endLine":41,"endColumn":27,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":29,"column":29,"nodeType":"149","messageId":"150","endLine":29,"endColumn":31},{"ruleId":"147","severity":1,"message":"148","line":38,"column":34,"nodeType":"149","messageId":"150","endLine":38,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":47,"column":34,"nodeType":"149","messageId":"150","endLine":47,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":56,"column":34,"nodeType":"149","messageId":"150","endLine":56,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":65,"column":34,"nodeType":"149","messageId":"150","endLine":65,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":77,"column":29,"nodeType":"149","messageId":"150","endLine":77,"endColumn":31},{"ruleId":"147","severity":1,"message":"148","line":87,"column":34,"nodeType":"149","messageId":"150","endLine":87,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":96,"column":34,"nodeType":"149","messageId":"150","endLine":96,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":105,"column":34,"nodeType":"149","messageId":"150","endLine":105,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":114,"column":34,"nodeType":"149","messageId":"150","endLine":114,"endColumn":36},{"ruleId":"151","severity":1,"message":"152","line":130,"column":13,"nodeType":"153","endLine":130,"endColumn":84},{"ruleId":"151","severity":1,"message":"152","line":132,"column":13,"nodeType":"153","endLine":132,"endColumn":86},{"ruleId":"151","severity":1,"message":"152","line":21,"column":21,"nodeType":"153","endLine":21,"endColumn":113},{"ruleId":"151","severity":1,"message":"152","line":46,"column":21,"nodeType":"153","endLine":46,"endColumn":92},{"ruleId":"151","severity":1,"message":"152","line":71,"column":21,"nodeType":"153","endLine":71,"endColumn":102},{"ruleId":"151","severity":1,"message":"152","line":96,"column":21,"nodeType":"153","endLine":96,"endColumn":103},{"ruleId":"151","severity":1,"message":"152","line":121,"column":21,"nodeType":"153","endLine":121,"endColumn":103},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'changeNavBar'. Either include it or remove the dependency array.","ArrayExpression",["154"],"React Hook useEffect has a missing dependency: 'changeAboutMeNav'. Either include it or remove the dependency array.",["155"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [changeNavBar, location.pathname]",{"range":"160","text":"161"},"Update the dependencies array to be: [changeAboutMeNav, location.pathname]",{"range":"162","text":"163"},[1367,1386],"[changeNavBar, location.pathname]",[1609,1628],"[changeAboutMeNav, location.pathname]"]